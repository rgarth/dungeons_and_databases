generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  accounts      Account[]
  characters    Character[]
  customWeapons CustomWeapon[]
  sessions      Session[]
  preferences   UserPreference?
}

model Character {
  id                    String   @id @default(cuid())
  name                  String
  race                  String
  subrace               String?
  class                 String
  level                 Int      @default(1)
  background            String
  alignment             String
  experience            Int      @default(0)
  strength              Int
  dexterity             Int
  constitution          Int
  intelligence          Int
  wisdom                Int
  charisma              Int
  hitPoints             Int
  maxHitPoints          Int
  armorClass            Int
  speed                 Int
  personalityTraits     Json?
  ideals                Json?
  bonds                 Json?
  flaws                 Json?
  appearance            String?
  inventory             Json?
  weapons               Json?
  armor                 Json?
  languages             Json?
  languageSources       Json?
  equipment             Json?
  gold                  Float    @default(0)
  copper                Int      @default(0)
  silver                Int      @default(0)
  electrum              Int      @default(0)
  platinum              Int      @default(0)
  avatarUrl             String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  userId                String
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  subclass              String?
  classes               Json?
  totalLevel            Int?
  selectedFeatures      Json?
  gender                String?
  age                   Int?
  temporaryHitPoints    Int?     @default(0)
  deathSaveSuccesses    Int?     @default(0)
  deathSaveFailures     Int?     @default(0)
  proficiencyBonus      Int?     @default(2)
  skills                Json?
  skillSources          Json?
  equippedWeapons       Json?
  inventoryWeapons      Json?
  ammunition            Json?
  equippedArmor         Json?
  inventoryArmor        Json?
  magicalItems          Json?
  inventoryMagicalItems Json?
  attunedItems          Json?
  copperPieces          Int?     @default(0)
  silverPieces          Int?     @default(0)
  goldPieces            Int?     @default(0)
  treasures             Json?
  spellsKnown           Json?
  spellsPrepared        Json?
  spellSlots            Json?
  spellcastingAbility   String?
  spellSaveDC           Int?
  spellAttackBonus      Int?
  actions               Json?
  bonusActions          Json?
  reactions             Json?
  personality           String?
  backstory             String?
  notes                 String?
  avatar                String?
  fullBodyAvatar        String?
  inspiration           Boolean? @default(false)
  conditions            Json?
  racialTraits          Json?
}

model CustomWeapon {
  id             String   @id @default(cuid())
  name           String
  baseWeaponName String
  modifier       Int      @default(0)
  customName     String?
  description    String?
  creatorId      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  creator        User     @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  @@unique([creatorId, name])
}

model UserPreference {
  id        String   @id @default(cuid())
  userId    String   @unique
  dieColor  String   @default("#dc2626")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
